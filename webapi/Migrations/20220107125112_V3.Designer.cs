// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.DataLayer;

namespace webapi.Migrations
{
    [DbContext(typeof(BOMContext))]
    [Migration("20220107125112_V3")]
    partial class V3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("webapi.DataLayer.Models.Cards.Card", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Damage")
                        .HasColumnType("int")
                        .HasColumnName("Damage");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("ManaCost")
                        .HasColumnType("int")
                        .HasColumnName("ManaCost");

                    b.Property<int>("NumberInDeck")
                        .HasColumnType("int")
                        .HasColumnName("NumberInDeck");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.HasKey("ID");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Cards.CardDeck", b =>
                {
                    b.Property<int>("CardID")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<int>("DeckID")
                        .HasColumnType("int")
                        .HasColumnName("DeckID");

                    b.HasKey("CardID", "DeckID");

                    b.HasIndex("DeckID");

                    b.ToTable("CardDeck");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Cards.Deck", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfCards")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfCards");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TerrainID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TerrainID");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Mage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.HasKey("ID");

                    b.ToTable("Mage");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Terrain", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.HasKey("ID");

                    b.ToTable("Terrain");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<int?>("MageID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Salt");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tag");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Username");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.HasIndex("MageID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Cards.CardDeck", b =>
                {
                    b.HasOne("webapi.DataLayer.Models.Cards.Card", "Card")
                        .WithMany("Decks")
                        .HasForeignKey("CardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.DataLayer.Models.Cards.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Cards.Deck", b =>
                {
                    b.HasOne("webapi.DataLayer.Models.User", "User")
                        .WithOne("Deck")
                        .HasForeignKey("webapi.DataLayer.Models.Cards.Deck", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Game", b =>
                {
                    b.HasOne("webapi.DataLayer.Models.Terrain", "Terrain")
                        .WithMany("Games")
                        .HasForeignKey("TerrainID");

                    b.Navigation("Terrain");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.User", b =>
                {
                    b.HasOne("webapi.DataLayer.Models.Game", "Game")
                        .WithMany("Users")
                        .HasForeignKey("GameID");

                    b.HasOne("webapi.DataLayer.Models.Mage", "Mage")
                        .WithMany("Users")
                        .HasForeignKey("MageID");

                    b.Navigation("Game");

                    b.Navigation("Mage");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Cards.Card", b =>
                {
                    b.Navigation("Decks");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Cards.Deck", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Game", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Mage", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.Terrain", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("webapi.DataLayer.Models.User", b =>
                {
                    b.Navigation("Deck");
                });
#pragma warning restore 612, 618
        }
    }
}
